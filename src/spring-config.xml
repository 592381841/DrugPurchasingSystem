<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">

	<import resource="spring-healthBureau-config.xml" />
	<import resource="spring-hospital-config.xml" />

	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
		<!--可更改数据库连接池 -->
		<property name="driverClassName" value="com.mysql.jdbc.Driver">
		</property>
		<property name="url"
			value="jdbc:mysql://localhost:3306/bcps?characterEncoding=utf-8">
		</property>
		<property name="username" value="bcps"></property>
		<property name="password" value="1234"></property>
		<!--连接池的最小个数 -->
		<property name="initialSize" value="10"></property>
		<!--连接池的最大个数 -->
		<property name="maxTotal" value="50"></property>
		<!--连接池的允许空闲连接最大个数 -->
		<property name="maxIdle" value="30"></property>
		<!--连接池的允许空闲连接最大个数 -->
		<property name="minIdle" value="20"></property>

		<property name="timeBetweenEvictionRunsMillis" value="6000">
			<!--连接池中空闲连接允许停留的时间 -->
		</property>
		<!--数值越大与数据库交互越不频繁 -->
		<property name="minEvictableIdleTimeMillis" value="18000">

		</property>
	</bean>
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQLDialect
				</prop>
				<prop key="hibernate.show_sql">
					false
				</prop>
			</props>
		</property>

		<!-- 使用注解方式配置domian -->
		<property name="packagesToScan" value="com.common.domain.">
		</property>
	</bean>

	<!-- 增删改的时候需要开启事务 -->
	<!-- 事务代理器的基类:提供事务模板 -->

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager"
		p:sessionFactory-ref="sessionFactory">
	</bean>

	<!--注解驱动 若spring基于注解配置 -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>


	<aop:config>
		<!--expression中过滤 第一个*好代表所有的返回类型 然后是包路径两个点号（“..”）表示所有路径 com.s2sh..bo.*Bo.tx*(..) 
			表示com.demo.service下所有路径的包中，以Service为后缀的类中，以tx开头任意参数的的方法使用事务 -->
		<aop:pointcut
			expression="execution(* com.demo.service..*Service.tx*(..))  or execution(* com.demo.service.healthBureau.impl.*ServiceImpl.tx*(..))"
			id="interceptorPointCuts" />

		<aop:advisor advice-ref="txAdvice" pointcut-ref="interceptorPointCuts" />

	</aop:config>



	<bean id="userdao" class="com.common.dao.UserDao"
		p:sessionFactory-ref="sessionFactory">

	</bean>
	<bean id="userService" class="com.common.service.UserService">
		<property name="userdao">
			<ref bean="userdao" />
		</property>
	</bean>
	
	
	<!-- 加载郵件Properties文件 -->  
    <bean id="configurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
        <property name="locations">  
            <list>  
                <value>classpath:mail.properties</value>  
            </list>  
        </property>  
    </bean>  
    <bean id="mailMessage" class="org.springframework.mail.SimpleMailMessage">  
        <property name="from">  
            <value>${mail.from}</value>  
        </property>  
        <!-- 查看SimpleMailMessage源码还可以注入标题,内容等 -->  
    </bean>  
    <!-- 申明JavaMailSenderImpl对象 -->  
    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">  
        <property name="defaultEncoding" value="UTF-8" />  
        <property name="host" value="${mail.host}" />  
        <property name="username" value="${mail.username}" />  
        <property name="password" value="${mail.password}" />  
        <property name="javaMailProperties">  
            <props>  
                <!-- 设置认证开关 -->  
                <prop key="mail.smtp.auth">true</prop>  
                <!-- 启动调试开关 -->  
                <prop key="mail.debug">true</prop>  
                <!-- 设置发送延时 -->
                <prop key="mail.smtp.timeout">0</prop>
                <prop key="mail.smtp.ssl.enable">true</prop>
                <prop key="mail.smtp.ssl.socketFactory">sf</prop>
            </props>  
        </property>  
     </bean>  
	
	
</beans>